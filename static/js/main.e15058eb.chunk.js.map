{"version":3,"sources":["constants/text.js","component/TodoList/Todo.js","component/TodoList/InputTodo.js","component/TodoList/Filter.js","component/TodoList/ButtonBar.js","component/TodoList/TodoList.js","component/TodoList/useTodos.js","reportWebVitals.js","index.js"],"names":["EXPLANATION","normal","empty","FILTER_CONTENT","name","value","BUTTON_TEXT","Todo","todo","handleTodoDone","handleTodoEdit","handleTodoDelete","buttonDoneText","buttonUndoneText","buttonDeleteText","InputGroup","className","Prepend","Button","variant","active","done","onClick","id","FormControl","content","disabled","onChange","event","target","Append","InputTodo","handleTodoAdd","explanation","buttonAddText","useState","setValue","placeholder","setPlaceholder","Filter","useContext","FilterContext","count","select","handleSelect","ToggleButtonGroup","type","ToggleButton","Badge","ButtonBar","handleTodoSave","handleTodoDeleteDone","buttonSaveText","buttonDeleteDoneText","createContext","TodoList","LOCAL_STORAGE_KEY","useRef","todoData","localStorage","getItem","JSON","parse","current","todos","setTodos","setSelect","doneCount","filter","length","map","setItem","stringify","useTodos","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e15058eb.chunk.js","sourcesContent":["const TITLE = \"TODO LIST\";\nconst EXPLANATION = {\n  normal: \"在這裡輸入新的 Todo！\",\n  empty: \"你沒有輸入 Todo 喔！\",\n};\nconst FILTER_CONTENT = [\n  { name: \"全部\", value: \"all\" },\n  { name: \"完成\", value: \"done\" },\n  { name: \"未完成\", value: \"undone\" },\n];\nconst BUTTON_TEXT = {\n  add: \"新增\",\n  done: \"完成\",\n  undone: \"未完成\",\n  delete: \"刪除\",\n  save: \"儲存\",\n  deleteDone: \"完成刪除\",\n};\nconst LOCAL_STORAGE_KEY = \"myTodoList\";\n\nexport { TITLE, EXPLANATION, FILTER_CONTENT, BUTTON_TEXT, LOCAL_STORAGE_KEY };\n","import { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function Todo({\n  todo,\n  handleTodoDone,\n  handleTodoEdit,\n  handleTodoDelete,\n  buttonDoneText,\n  buttonUndoneText,\n  buttonDeleteText,\n}) {\n  const handleDoneOnclick = () => handleTodoDone(todo.id);\n  const handleDeleteOnclick = () => handleTodoDelete(todo.id);\n  const handleInputEdit = (event) =>\n    handleTodoEdit(todo.id, event.target.value);\n  return (\n    <InputGroup className=\"todo mb-3\">\n      <InputGroup.Prepend>\n        <Button\n          variant=\"outline-info\"\n          active={todo.done}\n          onClick={handleDoneOnclick}\n        >\n          {todo.done ? buttonDoneText : buttonUndoneText}\n        </Button>\n      </InputGroup.Prepend>\n      <FormControl\n        value={todo.content}\n        disabled={todo.done}\n        onChange={handleInputEdit}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-danger\" onClick={handleDeleteOnclick}>\n          {buttonDeleteText}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    done: PropTypes.bool,\n  }),\n  handleTodoDone: PropTypes.func,\n  handleTodoEdit: PropTypes.func,\n  handleTodoDelete: PropTypes.func,\n  buttonDoneText: PropTypes.string,\n  buttonUndoneText: PropTypes.string,\n  buttonDeleteText: PropTypes.string,\n};\n","import { useState } from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function InputTodo({\n  handleTodoAdd,\n  explanation,\n  buttonAddText,\n}) {\n  const [value, setValue] = useState(\"\");\n  const [placeholder, setPlaceholder] = useState(explanation.normal);\n  const handleInput = (event) => setValue(event.target.value);\n  const handleInputSubmit = () => {\n    if (value === \"\") return setPlaceholder(explanation.empty);\n    handleTodoAdd({ content: value, done: false });\n    setValue(\"\");\n    setPlaceholder(explanation.normal);\n  };\n  return (\n    <InputGroup className=\"my-3\">\n      <FormControl\n        value={value}\n        placeholder={placeholder}\n        onChange={handleInput}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-secondary\" onClick={handleInputSubmit}>\n          {buttonAddText}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\n\nInputTodo.propTypes = {\n  handleTodoAdd: PropTypes.func,\n  explanation: PropTypes.shape({\n    normal: PropTypes.string,\n    empty: PropTypes.string,\n  }),\n  buttonAddText: PropTypes.string,\n};\n","import { ToggleButtonGroup, ToggleButton, Badge } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { FilterContext } from \"./TodoList\";\n\nexport default function Filter() {\n  const [count, select, handleSelect, FILTER_CONTENT] = useContext(\n    FilterContext\n  );\n  const handleFilterOnchange = (value) => handleSelect(value);\n  return (\n    <ToggleButtonGroup\n      type=\"radio\"\n      name=\"filter\"\n      value={select}\n      onChange={handleFilterOnchange}\n    >\n      <ToggleButton value={FILTER_CONTENT[0].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[0].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[0]}\n        </Badge>\n      </ToggleButton>\n      <ToggleButton value={FILTER_CONTENT[1].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[1].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[1]}\n        </Badge>\n      </ToggleButton>\n      <ToggleButton value={FILTER_CONTENT[2].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[2].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[2]}\n        </Badge>\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n","import Filter from \"./Filter\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function ButtonBar({\n  handleTodoSave,\n  handleTodoDeleteDone,\n  buttonSaveText,\n  buttonDeleteDoneText,\n}) {\n  return (\n    <div className=\"container d-flex justify-content-between fixed-bottom py-3 bg-white\">\n      <Button variant=\"outline-info\" onClick={handleTodoSave}>\n        {buttonSaveText}\n      </Button>\n      <Filter />\n      <Button variant=\"danger\" onClick={handleTodoDeleteDone}>\n        {buttonDeleteDoneText}\n      </Button>\n    </div>\n  );\n}\n\nButtonBar.propTypes = {\n  handleTodoSave: PropTypes.func,\n  handleTodoDeleteDone: PropTypes.func,\n  buttonSaveText: PropTypes.string,\n  buttonDeleteDoneText: PropTypes.string,\n};\n","import { createContext } from \"react\";\nimport {\n  TITLE,\n  EXPLANATION,\n  FILTER_CONTENT,\n  BUTTON_TEXT,\n  LOCAL_STORAGE_KEY,\n} from \"../../constants/text\";\nimport useTodos from \"./useTodos\";\nimport Todo from \"./Todo\";\nimport InputTodo from \"./InputTodo\";\nimport ButtonBar from \"./ButtonBar\";\n\nexport const FilterContext = createContext();\n\nfunction TodoList() {\n  const {\n    todos,\n    select,\n    count,\n    handleTodoAdd,\n    handleTodoDone,\n    handleTodoEdit,\n    handleTodoDelete,\n    handleTodoDeleteDone,\n    handleTodoSave,\n    handleSelect,\n  } = useTodos(LOCAL_STORAGE_KEY);\n  return (\n    <div className=\"App container\">\n      <h1 className=\"my-3 text-secondary\">{TITLE}</h1>\n      <InputTodo\n        handleTodoAdd={handleTodoAdd}\n        explanation={EXPLANATION}\n        buttonAddText={BUTTON_TEXT.add}\n      />\n      <div>\n        {todos.map((todo) => {\n          if (\n            select === FILTER_CONTENT[0].value ||\n            (select === FILTER_CONTENT[1].value) === todo.done\n          ) {\n            return (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                handleTodoDone={handleTodoDone}\n                handleTodoEdit={handleTodoEdit}\n                handleTodoDelete={handleTodoDelete}\n                buttonDoneText={BUTTON_TEXT.done}\n                buttonUndoneText={BUTTON_TEXT.undone}\n                buttonDeleteText={BUTTON_TEXT.delete}\n              />\n            );\n          }\n          return false;\n        })}\n      </div>\n      <FilterContext.Provider\n        value={[count, select, handleSelect, FILTER_CONTENT]}\n      >\n        <ButtonBar\n          handleTodoSave={handleTodoSave}\n          handleTodoDeleteDone={handleTodoDeleteDone}\n          buttonSaveText={BUTTON_TEXT.save}\n          buttonDeleteDoneText={BUTTON_TEXT.deleteDone}\n        />\n      </FilterContext.Provider>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { useState, useRef } from \"react\";\n\nexport default function useTodos(LOCAL_STORAGE_KEY) {\n  const id = useRef(1);\n  const [todos, setTodos] = useState(() => {\n    let todoData = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (todoData && todoData !== \"\" && todoData !== \"[]\") {\n      todoData = JSON.parse(todoData);\n      id.current = todoData[0].id;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  const [select, setSelect] = useState(\"all\");\n  let doneCount = todos.filter((todo) => todo.done).length;\n  let count = [todos.length, doneCount, todos.length - doneCount];\n\n  const handleTodoAdd = (todo) => {\n    setTodos([{ id: id.current, ...todo }, ...todos]);\n    id.current++;\n  };\n  const handleTodoDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return { ...todo, done: !todo.done };\n      })\n    );\n  };\n  const handleTodoEdit = (id, content) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return { ...todo, content };\n      })\n    );\n  };\n  const handleTodoDelete = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  const handleTodoDeleteDone = () => {\n    setTodos(todos.filter((todo) => !todo.done));\n  };\n  const handleTodoSave = () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  };\n  const handleSelect = (value) => {\n    setSelect(value);\n  };\n  return {\n    todos,\n    select,\n    count,\n    handleTodoAdd,\n    handleTodoDone,\n    handleTodoEdit,\n    handleTodoDelete,\n    handleTodoDeleteDone,\n    handleTodoSave,\n    handleSelect,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoList from \"./component/TodoList\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}