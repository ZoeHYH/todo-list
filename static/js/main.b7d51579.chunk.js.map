{"version":3,"sources":["constants/text.js","component/ErrorMessage.js","component/Todo.js","component/InputTodo.js","component/Filter.js","component/ButtonBar.js","TodoList/TodoList.js","TodoList/useTodos.js","reportWebVitals.js","index.js"],"names":["FILTER_CONTENT","name","value","BUTTON_TEXT","ErrorMessage","error","handleError","Alert","variant","onClose","dismissible","Todo","todo","handleTodoDone","handleTodoEdit","handleTodoDelete","buttonDoneText","buttonUndoneText","buttonDeleteText","InputGroup","className","Prepend","Button","active","done","onClick","id","FormControl","content","disabled","onChange","event","target","Append","InputTodo","handleTodoAdd","explanation","emptyMessage","buttonAddText","useState","setValue","placeholder","Filter","useContext","FilterContext","count","select","handleSelect","ToggleButtonGroup","type","ToggleButton","Badge","ButtonBar","handleTodoSave","handleTodoDeleteDone","buttonSaveText","buttonDeleteDoneText","createContext","TodoList","LOCAL_STORAGE_KEY","useRef","todoData","localStorage","getItem","JSON","parse","current","todos","setTodos","setSelect","setError","doneCount","filter","length","map","setItem","stringify","useTodos","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d51579.chunk.js","sourcesContent":["const TITLE = \"TODO LIST\";\nconst EXPLANATION = \"在這裡輸入新的 Todo！\";\nconst EMPTY_MESSAGE = \"你沒有輸入 Todo 喔！\";\nconst FILTER_CONTENT = [\n  { name: \"全部\", value: \"all\" },\n  { name: \"完成\", value: \"done\" },\n  { name: \"未完成\", value: \"undone\" },\n];\nconst BUTTON_TEXT = {\n  add: \"新增\",\n  done: \"完成\",\n  undone: \"未完成\",\n  delete: \"刪除\",\n  save: \"儲存\",\n  deleteDone: \"完成刪除\",\n};\nconst LOCAL_STORAGE_KEY = \"ZoeHYHTodoList\";\n\nexport {\n  TITLE,\n  EXPLANATION,\n  EMPTY_MESSAGE,\n  FILTER_CONTENT,\n  BUTTON_TEXT,\n  LOCAL_STORAGE_KEY,\n};\n","import { Alert } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function ErrorMessage({ error, handleError }) {\n  const handleOnClose = () => handleError(\"\");\n  return (\n    <Alert variant=\"danger\" onClose={handleOnClose} dismissible>\n      {error}\n    </Alert>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.string,\n  handleError: PropTypes.func,\n};\n","import { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function Todo({\n  todo,\n  handleTodoDone,\n  handleTodoEdit,\n  handleTodoDelete,\n  buttonDoneText,\n  buttonUndoneText,\n  buttonDeleteText,\n}) {\n  const handleDoneOnclick = () => handleTodoDone(todo.id);\n  const handleDeleteOnclick = () => handleTodoDelete(todo.id);\n  const handleInputEdit = (event) =>\n    handleTodoEdit(todo.id, event.target.value);\n  return (\n    <InputGroup className=\"todo mb-3\">\n      <InputGroup.Prepend>\n        <Button\n          variant=\"outline-info\"\n          active={todo.done}\n          onClick={handleDoneOnclick}\n        >\n          {todo.done ? buttonDoneText : buttonUndoneText}\n        </Button>\n      </InputGroup.Prepend>\n      <FormControl\n        value={todo.content}\n        disabled={todo.done}\n        onChange={handleInputEdit}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-danger\" onClick={handleDeleteOnclick}>\n          {buttonDeleteText}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    done: PropTypes.bool,\n  }),\n  handleTodoDone: PropTypes.func,\n  handleTodoEdit: PropTypes.func,\n  handleTodoDelete: PropTypes.func,\n  buttonDoneText: PropTypes.string,\n  buttonUndoneText: PropTypes.string,\n  buttonDeleteText: PropTypes.string,\n};\n","import { useState } from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function InputTodo({\n  handleTodoAdd,\n  handleError,\n  explanation,\n  emptyMessage,\n  buttonAddText,\n}) {\n  const [value, setValue] = useState(\"\");\n  const handleInput = (event) => setValue(event.target.value);\n  const handleInputSubmit = () => {\n    if (value === \"\") return handleError(emptyMessage);\n    handleTodoAdd({ content: value, done: false });\n    setValue(\"\");\n  };\n  return (\n    <InputGroup className=\"my-3\">\n      <FormControl\n        value={value}\n        placeholder={explanation}\n        onChange={handleInput}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-secondary\" onClick={handleInputSubmit}>\n          {buttonAddText}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\n\nInputTodo.propTypes = {\n  handleTodoAdd: PropTypes.func,\n  handleError: PropTypes.func,\n  explanation: PropTypes.string,\n  emptyMessage: PropTypes.string,\n  buttonAddText: PropTypes.string,\n};\n","import { ToggleButtonGroup, ToggleButton, Badge } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { FilterContext } from \"../TodoList/TodoList\";\n\nexport default function Filter() {\n  const [count, select, handleSelect, FILTER_CONTENT] = useContext(\n    FilterContext\n  );\n  const handleFilterOnchange = (value) => handleSelect(value);\n  return (\n    <ToggleButtonGroup\n      type=\"radio\"\n      name=\"filter\"\n      value={select}\n      onChange={handleFilterOnchange}\n    >\n      <ToggleButton value={FILTER_CONTENT[0].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[0].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[0]}\n        </Badge>\n      </ToggleButton>\n      <ToggleButton value={FILTER_CONTENT[1].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[1].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[1]}\n        </Badge>\n      </ToggleButton>\n      <ToggleButton value={FILTER_CONTENT[2].value} variant=\"outline-secondary\">\n        {FILTER_CONTENT[2].name}\n        <Badge className=\"ml-1\" variant=\"light\">\n          {count[2]}\n        </Badge>\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n","import Filter from \"./Filter\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default function ButtonBar({\n  handleTodoSave,\n  handleTodoDeleteDone,\n  buttonSaveText,\n  buttonDeleteDoneText,\n}) {\n  return (\n    <div className=\"container d-flex justify-content-between fixed-bottom py-3 bg-white\">\n      <Button variant=\"outline-info\" onClick={handleTodoSave}>\n        {buttonSaveText}\n      </Button>\n      <Filter />\n      <Button variant=\"danger\" onClick={handleTodoDeleteDone}>\n        {buttonDeleteDoneText}\n      </Button>\n    </div>\n  );\n}\n\nButtonBar.propTypes = {\n  handleTodoSave: PropTypes.func,\n  handleTodoDeleteDone: PropTypes.func,\n  buttonSaveText: PropTypes.string,\n  buttonDeleteDoneText: PropTypes.string,\n};\n","import { createContext } from \"react\";\nimport {\n  TITLE,\n  EXPLANATION,\n  EMPTY_MESSAGE,\n  FILTER_CONTENT,\n  BUTTON_TEXT,\n  LOCAL_STORAGE_KEY,\n} from \"../constants/text\";\nimport useTodos from \"./useTodos\";\nimport ErrorMessage from \"../component/ErrorMessage\";\nimport Todo from \"../component/Todo\";\nimport InputTodo from \"../component/InputTodo\";\nimport ButtonBar from \"../component/ButtonBar\";\n\nexport const FilterContext = createContext();\n\nexport default function TodoList() {\n  const {\n    todos,\n    select,\n    count,\n    error,\n    handleTodoAdd,\n    handleTodoDone,\n    handleTodoEdit,\n    handleTodoDelete,\n    handleTodoDeleteDone,\n    handleTodoSave,\n    handleSelect,\n    handleError,\n  } = useTodos(LOCAL_STORAGE_KEY);\n  return (\n    <div className=\"container\">\n      <h1 className=\"my-3 text-secondary\">{TITLE}</h1>\n      {error !== \"\" ? (\n        <ErrorMessage error={error} handleError={handleError} />\n      ) : (\n        \"\"\n      )}\n      <InputTodo\n        handleTodoAdd={handleTodoAdd}\n        handleError={handleError}\n        explanation={EXPLANATION}\n        emptyMessage={EMPTY_MESSAGE}\n        buttonAddText={BUTTON_TEXT.add}\n      />\n      <div>\n        {todos.map((todo) => {\n          if (\n            select === FILTER_CONTENT[0].value ||\n            (select === FILTER_CONTENT[1].value) === todo.done\n          ) {\n            return (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                handleTodoDone={handleTodoDone}\n                handleTodoEdit={handleTodoEdit}\n                handleTodoDelete={handleTodoDelete}\n                buttonDoneText={BUTTON_TEXT.done}\n                buttonUndoneText={BUTTON_TEXT.undone}\n                buttonDeleteText={BUTTON_TEXT.delete}\n              />\n            );\n          }\n          return false;\n        })}\n      </div>\n      <FilterContext.Provider\n        value={[count, select, handleSelect, FILTER_CONTENT]}\n      >\n        <ButtonBar\n          handleTodoSave={handleTodoSave}\n          handleTodoDeleteDone={handleTodoDeleteDone}\n          buttonSaveText={BUTTON_TEXT.save}\n          buttonDeleteDoneText={BUTTON_TEXT.deleteDone}\n        />\n      </FilterContext.Provider>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\n\nexport default function useTodos(LOCAL_STORAGE_KEY) {\n  const id = useRef(1);\n  const [todos, setTodos] = useState(() => {\n    let todoData = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (todoData && todoData !== \"\" && todoData !== \"[]\") {\n      todoData = JSON.parse(todoData);\n      id.current = todoData[0].id;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  const [select, setSelect] = useState(\"all\");\n  const [error, setError] = useState(\"\");\n  let doneCount = todos.filter((todo) => todo.done).length;\n  let count = [todos.length, doneCount, todos.length - doneCount];\n  const handleTodoAdd = (todo) => {\n    setTodos([{ id: id.current, ...todo }, ...todos]);\n    id.current++;\n  };\n  const handleTodoDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return { ...todo, done: !todo.done };\n      })\n    );\n  };\n  const handleTodoEdit = (id, content) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return { ...todo, content };\n      })\n    );\n  };\n  const handleTodoDelete = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  const handleTodoDeleteDone = () => {\n    setTodos(todos.filter((todo) => !todo.done));\n  };\n  const handleTodoSave = () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  };\n  const handleSelect = (value) => {\n    setSelect(value);\n  };\n  const handleError = (value) => {\n    setError(value);\n  };\n  return {\n    todos,\n    select,\n    count,\n    error,\n    handleTodoAdd,\n    handleTodoDone,\n    handleTodoEdit,\n    handleTodoDelete,\n    handleTodoDeleteDone,\n    handleTodoSave,\n    handleSelect,\n    handleError,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoList from \"./TodoList\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}